<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE components PUBLIC "-//AJAX4JSF//CDK Generator config/EN"  "http://labs.jboss.com/jbossrichfaces/component-config.dtd">

<components>
	<component>
		<name>org.omidbiz.InputNumeric</name>
		<family>org.omidbiz.InputNumeric</family>
		<classname>org.omidbiz.component.html.HtmlInputNumeric</classname>
		<superclass>org.omidbiz.component.UIInputNumeric</superclass>
		<description>
			<![CDATA[
    ]]>
		</description>
		<renderer generate="true" override="true">
			<name>org.omidbiz.InputNumericRenderer</name>
			<template>org/omidbiz/htmlInputNumeric.jspx</template>
		</renderer>
		<tag>
			<name>inputNumeric</name>
			<classname>org.omidbiz.taglib.InputNumericTag</classname>
			<superclass>
				org.ajax4jsf.webapp.taglib.HtmlComponentTagBase
			</superclass>
		</tag>
		<!--
		<taghandler>
			<classname>org.ajax4jsf.tag.TestHandler</classname>
		</taghandler>
		-->
		&ui_component_attributes;
		&html_events;
		&ui_input_attributes;
  		
  		<property>
			<name>value</name>
			<classname>java.lang.Object</classname>
			<description>
				The value of the component
			</description>
		</property>
  		<property>
			<name>typeOfValue</name>
			<classname>java.lang.String</classname>
			<description>
				typeOfValue can be double, big decimal or integer
			</description>
		</property>
		<property>
			<name>separator</name>
			<classname>java.lang.String</classname>
			<description>
			</description>
			<defaultvalue>&quot;,&quot;</defaultvalue>
		</property>
		<property>
			<name>name</name>
			<classname>java.lang.String</classname>
			<description>
				Defines a name of the component
			</description>
		</property>
		<property>
			<name>forceId</name>
			<classname>java.lang.String</classname>
			<description>
				Defines a name of the component
			</description>
		</property>
		<property>
			<name>unitLabel</name>
			<classname>java.lang.String</classname>
			<description>
				Rial unit
			</description>
		</property>
		<property>
			<name>title</name>
			<classname>java.lang.String</classname>
			<description>
				Defines a title of the component
			</description>
		</property>
		<property>
			<name>styleClass</name>
			<classname>java.lang.String</classname>
			<description>
				Corresponds to the HTML class attribute
			</description>
		</property>
		<property>
			<name>onCloseCal</name>
			<classname>java.lang.String</classname>
			<description>
				run a function when calculator is closing - u can use two parameters inst and value
			</description>
			<defaultvalue>"''"</defaultvalue>
		</property>
		<property>
			<name>inputStyle</name>
			<classname>java.lang.String</classname>
			<description>
				Style attribute for input field
			</description>
		</property>
		<property>
			<name>inputClass</name>
			<classname>java.lang.String</classname>
			<description>
				Style Class attribute for the input field
			</description>
		</property>
		<property>
			<name>iconClass</name>
			<classname>java.lang.String</classname>
			<description>
				Style Class attribute for the icon element
			</description>
		</property>
		<property>
			<name>iconStyle</name>
			<classname>java.lang.String</classname>
			<description>
				Style attribute for the icon element
			</description>
		</property>
		<property>
			<name>calculator</name>
			<classname>boolean</classname>
			<description>
				insert a nice calculator 
			</description>
			<defaultvalue>false</defaultvalue>
		</property>
		<property>
			<name>captionClass</name>
			<classname>java.lang.String</classname>
			<description>
				Style Class attribute for the Caption facet
			</description>
		</property>
		<property>
			<name>digit</name>
			<classname>java.lang.Integer</classname>
			<description>
			</description>
		</property>
		<property>
			<name>decimalDigit</name>
			<classname>java.lang.Integer</classname>
			<description>
			</description>
		</property>
		<property>
			<name>putDefaultZero</name>
			<classname>java.lang.Boolean</classname>
			<description>
				this property put a zero in text input when it's data is null
			</description>
			<defaultvalue>true</defaultvalue>
		</property>
		<property>
			<name>switchInput</name>
			<classname>java.lang.Boolean</classname>
			<description>
				true or false; If there are two related inputs,then this attribute must be true,
				Default is : false
			</description>
			<defaultvalue>false</defaultvalue>
		</property>	
		<property>
			<name>autocomplete</name>
			<classname>java.lang.String</classname>
			<description>
				off or on; To display or hide suggestion in inputNumeric,
				Default is : on
			</description>
			<defaultvalue>"on"</defaultvalue>
		</property>
	</component>
</components>
